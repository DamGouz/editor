.heading {
    display: flex;
    gap: 8px;
    align-items: center;
}

.headingContent {
    display: flex;
    flex-direction: column;
}

.headingTitle {
    padding-left: 8px;
    transition: background-color 0.2s ease-in-out;
    border-radius: 6px;
    cursor: text;
}

.headingTitle:hover {
    background-color: rgba(0, 0, 0, 0.06);
}

* {
    box-sizing: border-box;
}

.page {
    display: flex;
    height: 100vh;
    flex-direction: column;
    background: #f0f2f5;
}

.contentWrapper {
    flex: 1;
    overflow-y: auto;
    display: flex;
    gap: 8px;
}

.content {
    flex: 1;
    overflow-y: auto;
}

.tabs {
    display: flex;
    flex-direction: column;
    height: 100%;
    flex: 1;
    border-bottom: 1px solid #fafafa;
}

.tabContent {
    flex: 1;
    width: 100%;
    height: calc(100vh - 56px);
    position: relative;
    display: flex;
    flex-direction: column;
}

.tabContent .content {
    flex: 1;
    display: flex;
    min-height: 0;
}

/* ------------- NEW rules for full-width tabs ------------- */
.tabsContainer {
    flex: 1;                   /* grow to fill space */
    display: flex;
    flex-direction: column;
    min-width: 0;              /* allow shrinking */
}

/* make Ant Design tab panes stretch */
.tabsContainer .ant-tabs,
.tabsContainer .ant-tabs-content-holder,
.tabsContainer .ant-tabs-content,
.tabsContainer .ant-tabs-tabpane {
    height: 100%;
    width: 100%;
}

/* .tabsContainer :global(.ant-tabs-content) > :global(.ant-tabs-tabpane-active) {
    height: 94vh;
  } */

.graphArea {
    flex: 1;            /* occupy the whole remaining pane                 */
    display: flex;      /* make its child (= DecisionGraph) a flex-item    */
    min-width: 0;       /* allow shrinking                                 */
    min-height: 0;
  }
  
.graphArea > * {
    flex: 1;            /* let DecisionGraph grow                          */
    width: 100%;        /* ← React-Flow needs these two                    */
    height: 100%;       /* ←                                                  */
    min-width: 0;
    min-height: 0;
}

/* let Tabs and graph stretch full width + height */
.tabsContainer,
.tabsContainer > .ant-tabs,
.tabsContainer .ant-tabs-content-holder,
.tabsContainer .ant-tabs-content {
  display: flex;
  flex-direction: column;
  flex: 1 1 0%;
  min-height: 0;
}
.tabsContainer .ant-tabs-tabpane {
  flex: 1 1 0%;
  display: flex;
  flex-direction: column;
  min-height: 0;
}

.graphArea {
  flex: 1;
  display: flex;
  min-width: 0;
  min-height: 0;
}

.graphArea > * {
    flex: 1;          /* grow inside the flex wrapper   */
    height: 100%;     /* ← key: fill vertical space     */
    width: 100%;
    min-height: 0;    /* allow shrinking if needed      */
  }
.placeholder {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #999;
}

.tabsContainer .ant-tabs-content-top {
  display: flex;          /* column flex container            */
  flex-direction: column;
  flex: 1 1 0%;           /* grow to fill remaining height    */
  min-height: 0;          /* allow shrinking in flex context  */
}